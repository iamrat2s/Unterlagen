package org.hbrs.se2.project.fsp.views;

import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.data.binder.Binder;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.datepicker.DatePicker;
import com.vaadin.flow.component.select.Select;
import com.vaadin.flow.component.textfield.TextArea;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.component.notification.Notification;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import org.hbrs.se2.project.fsp.dto.impl.StudentsDTO;
import org.hbrs.se2.project.fsp.services.db.JDBCConnection;

import java.time.LocalDate;

@Route("register")
public class RegisterView extends VerticalLayout {

    private TextField firstNameField;
    private TextField lastNameField;
    private Select<String> degreeField;
    private TextArea interestsField;
    private TextArea skillsField;
    private TextField xingLinkField;
    private TextField linkedinLinkField;
    private Binder<StudentsDTO> studentsBinder = new Binder<>(StudentsDTO.class);

    public RegisterView() {
        firstNameField = new TextField("Vorname");
        lastNameField = new TextField("Nachname");
        degreeField = new Select<>();
        degreeField.setLabel("Studiengang");
        degreeField.setItems("Informatik", "Maschinenbau", "Elektrotechnik", "Wirtschaftsinformatik", "Medizin");

        degreeField.setItems("Informatik", "Maschinenbau", "Elektrotechnik", "Wirtschaftsinformatik", "Medizin");
        interestsField = new TextArea("Interessen im Studium");
        skillsField = new TextArea("Fachliche Vorkenntnisse und Kompetenzen");
        xingLinkField = new TextField("XING-Profil-Link");
        linkedinLinkField = new TextField("LinkedIn-Profil-Link");

        studentsBinder.forField(firstNameField).bind(StudentsDTO::getForename, StudentsDTO::setForename);
        studentsBinder.forField(lastNameField).bind(StudentsDTO::getSurname, StudentsDTO::setSurname);
        studentsBinder.forField(degreeField).bind(StudentsDTO::getStudyCourse, StudentsDTO::setStudyCourse);
        studentsBinder.forField(interestsField).bind(StudentsDTO::getStudyInterests, StudentsDTO::setStudyInterests);
        studentsBinder.forField(skillsField).bind(StudentsDTO::getKnowledgeSkills, StudentsDTO::setKnowledgeSkills);
        studentsBinder.forField(xingLinkField).bind(StudentsDTO::getXing, StudentsDTO::setXing);
        studentsBinder.forField(linkedinLinkField).bind(StudentsDTO::getLinkedin, StudentsDTO::setLinkedin);

        Button saveButton = new Button("Speichern", event -> saveProfile());
        add(firstNameField, lastNameField, degreeField, interestsField, skillsField, xingLinkField, linkedinLinkField, saveButton);
    }

    private void saveProfile() {
        StudentsDTO studentsDTO = new StudentsDTO();
        try {
            studentsBinder.writeBean(studentsDTO);
            insertStudentIntoDatabase(studentsDTO);

            Notification.show("Benutzer wurde registriert.");
            clearForm();
        } catch (Exception e) {
            Notification.show("Fehler beim Speichern des Profils: " + e.getMessage());
        }
    }

    private void clearForm() {
        firstNameField.clear();
        lastNameField.clear();
        degreeField.clear();
        interestsField.clear();
        skillsField.clear();
        xingLinkField.clear();
        linkedinLinkField.clear();
    }

    private void insertStudentIntoDatabase(StudentsDTO studentsDTO) {
        try {
            JDBCConnection jdbcConnection = JDBCConnection.getInstance();
            String sql = "INSERT INTO students (forename, surname, study_course, study_interests, knowledge_skills, xing, linkedin,account_id) " +
                    "VALUES (?, ?, ?, ?, ?, ?, ?,100)";
            PreparedStatement statement = jdbcConnection.getPreparedStatement(sql);
            statement.setString(1, studentsDTO.getForename());
            statement.setString(2, studentsDTO.getSurname());
            statement.setString(3, studentsDTO.getStudyCourse());
            statement.setString(4, studentsDTO.getStudyInterests());
            statement.setString(5, studentsDTO.getKnowledgeSkills());
            statement.setString(6, studentsDTO.getXing());
            statement.setString(7, studentsDTO.getLinkedin());
            statement.executeUpdate();
            jdbcConnection.closeConnection();
        } catch (Exception e) {
            Notification.show("Fehler beim Speichern des Profils: " + e.getMessage());
        }
    }
}
